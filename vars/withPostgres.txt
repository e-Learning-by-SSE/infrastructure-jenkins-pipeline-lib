Create an instance of PostgresTestImage.

## Start
To start a simple psql container run:
```
withPostgres()
```

The default values are:
- dbImage: 'postgres:latest',
- dbUser: 'myuser',
- dbPassword: 'mypassword',
- dbName: 'mydatabase',
- dbExposedPort: '5432'

You can configure it like:
```
withPostgres([ dbUser: DB_USER,  dbPassword: DB_PASSWORD,  dbName: DB_NAME, dbExposedPort: 5433]) {

}
```

## Sidecar

To run something inside a sidecar container: 
```
withPostgres().insideSidecar("node:latest", "--tmpfs /.cache -v $HOME/.npm:/.npm") {
    sh 'npm install pg'
    sh 'node testconnection.js'
}
```

You must take care that you application (here testconnection.js) is configured to use the postgres database settings. 
When using sidecar, the db server is always reachable under "db" hostname and Port 5432. It doesn't matter which public port was provided inside the `withPostgres` method, because you'll use the internal docker network.